<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<InfoWarnings>
  <Info>Begin full analysis with NDepend v2023.2.3 on 24 Jan 2024 03:09:23</Info>
  <Info>Visual Studio solution file resolved to absolute file path: from    {.\PSG.sln}    to    {D:\Unity Projects\PSG\PSG.sln}</Info>
  <Info>Output directory resolved to absolute directory path: D:\Unity Projects\PSG\NDependOut</Info>
  <Info>.NET Assemblies resolved from the Visual Studio solution file {D:\Unity Projects\PSG\PSG.sln}
   D:\Unity Projects\PSG\Library\ScriptAssemblies\Assembly-CSharp.dll
   D:\Unity Projects\PSG\Library\ScriptAssemblies\PsdPlugin.dll
   D:\Unity Projects\PSG\Library\ScriptAssemblies\Assembly-CSharp-Editor.dll</Info>
  <Info>.NET Assemblies filtered out from the Visual Studio solution file {D:\Unity Projects\PSG\PSG.sln} [ 0 , 19 ]
   UnityEngine.TestRunner
   Unity.VisualScripting.Flow
   Unity.Mathematics
   Unity.InputSystem
   Unity.VisualScripting.State
   Unity.VisualScripting.Core
   Unity.Burst
   Unity.2D.Animation.Runtime
   Unity.TextMeshPro
   Unity.Timeline
   Unity.InputSystem.ForUI
   Unity.2D.SpriteShape.Runtime
   Unity.2D.PixelPerfect
   Unity.2D.Common.Runtime
   Unity.2D.IK.Runtime
   Unity.2D.Tilemap.Extras
   Unity.InputSystem.TestFramework
   Unity.InternalAPIEngineBridge.001
   Unity.PlasticSCM.Editor
   Unity.VisualScripting.Core.Editor</Info>
  <Info>.NET Assemblies filtered out from the Visual Studio solution file {D:\Unity Projects\PSG\PSG.sln} [ 20 , 39 ]
   Unity.VisualScripting.Flow.Editor
   Unity.2D.Aseprite.Editor
   Unity.VisualStudio.Editor
   Unity.Timeline.Editor
   Unity.VisualScripting.State.Editor
   Unity.TextMeshPro.Editor
   Unity.2D.PixelPerfect.Editor
   Unity.2D.Animation.Editor
   Unity.VisualScripting.SettingsProvider.Editor
   Unity.2D.Psdimporter.Editor
   UnityEditor.TestRunner
   Unity.Rider.Editor
   Unity.2D.Path.Editor
   Unity.2D.IK.Editor
   Unity.2D.SpriteShape.Editor
   Unity.Burst.CodeGen
   Unity.VSCode.Editor
   Unity.2D.Common.Editor
   Unity.CollabProxy.Editor
   Unity.Mathematics.Editor</Info>
  <Info>.NET Assemblies filtered out from the Visual Studio solution file {D:\Unity Projects\PSG\PSG.sln} [ 40 , 45 ]
   Unity.InternalAPIEditorBridge.005
   Unity.2D.Tilemap.Extras.Editor
   Unity.Burst.Editor
   Unity.InternalAPIEditorBridge.001
   Unity.VisualScripting.Shared.Editor
   Unity.2D.Aseprite.Common</Info>
  <Info>Concurrent mode</Info>
  <Info>.NET Assembly loaded from {C:\Program Files\dotnet\shared\Microsoft.NETCore.App\8.0.1} 
   netstandard.dll   v2.1.0.0</Info>
  <Info>.NET Assemblies loaded from {C:\Windows\Microsoft.NET\Framework\v4.0.30319} 
   mscorlib.dll   v4.0.0.0
   System.dll   v4.0.0.0
   System.Core.dll   v4.0.0.0</Info>
  <Info>91 source files parsed ; all source files found ; all source files in-sync with PDB</Info>
  <Info>0 code rule has been extracted from code.</Info>
  <Info>No dependency cycle detected in assemblies referencement graph.</Info>
  <Info>Do merge code generated by compiler into application code.</Info>
  <Info>Analyze dependencies of your application.</Info>
  <Info>No SuppressMessageAttribute found in the analyzed code base. Since NDepend v2018.2 SuppressMessageAttribute can be used to suppress NDepend issues. Don't forget to set in your projects the compilation symbol CODE_ANALYSIS to use this attribute to suppress NDepend issues.</Info>
  <Info>Persisting code model snapshot in {D:\Unity Projects\PSG\NDependOut\NDependAnalysisResult_PSG_2024Jan24_03h09m23.ndar}</Info>
  <Info>Log trend metrics values.</Info>
  <Warning>Rule {From now, all types added should be 100% covered by tests} relies on code coverage data that is not available in the baseline code base snapshot. The rule hasen't been executed on both baseline and newer code base snapshots.</Warning>
  <Warning>Rule {From now, all types added should be 100% covered by tests} relies on code coverage data that is not available in the newer code base snapshot. The rule hasen't been executed on both baseline and newer code base snapshots.</Warning>
  <Warning>Rule {Avoid decreasing code coverage by tests of types} relies on code coverage data that is not available in the baseline code base snapshot. The rule hasen't been executed on both baseline and newer code base snapshots.</Warning>
  <Warning>Rule {Avoid decreasing code coverage by tests of types} relies on code coverage data that is not available in the newer code base snapshot. The rule hasen't been executed on both baseline and newer code base snapshots.</Warning>
  <Warning>Rule {Code should be tested} relies on code coverage data that is not available in the baseline code base snapshot. The rule hasen't been executed on both baseline and newer code base snapshots.</Warning>
  <Warning>Rule {Code should be tested} relies on code coverage data that is not available in the newer code base snapshot. The rule hasen't been executed on both baseline and newer code base snapshots.</Warning>
  <Warning>Rule {New Types and Methods should be tested} relies on code coverage data that is not available in the baseline code base snapshot. The rule hasen't been executed on both baseline and newer code base snapshots.</Warning>
  <Warning>Rule {New Types and Methods should be tested} relies on code coverage data that is not available in the newer code base snapshot. The rule hasen't been executed on both baseline and newer code base snapshots.</Warning>
  <Warning>Rule {Methods refactored should be tested} relies on code coverage data that is not available in the baseline code base snapshot. The rule hasen't been executed on both baseline and newer code base snapshots.</Warning>
  <Warning>Rule {Methods refactored should be tested} relies on code coverage data that is not available in the newer code base snapshot. The rule hasen't been executed on both baseline and newer code base snapshots.</Warning>
  <Warning>Rule {Assemblies and Namespaces should be tested} relies on code coverage data that is not available in the baseline code base snapshot. The rule hasen't been executed on both baseline and newer code base snapshots.</Warning>
  <Warning>Rule {Assemblies and Namespaces should be tested} relies on code coverage data that is not available in the newer code base snapshot. The rule hasen't been executed on both baseline and newer code base snapshots.</Warning>
  <Warning>Rule {Types almost 100% tested should be 100% tested} relies on code coverage data that is not available in the baseline code base snapshot. The rule hasen't been executed on both baseline and newer code base snapshots.</Warning>
  <Warning>Rule {Types almost 100% tested should be 100% tested} relies on code coverage data that is not available in the newer code base snapshot. The rule hasen't been executed on both baseline and newer code base snapshots.</Warning>
  <Warning>Rule {Namespaces almost 100% tested should be 100% tested} relies on code coverage data that is not available in the baseline code base snapshot. The rule hasen't been executed on both baseline and newer code base snapshots.</Warning>
  <Warning>Rule {Namespaces almost 100% tested should be 100% tested} relies on code coverage data that is not available in the newer code base snapshot. The rule hasen't been executed on both baseline and newer code base snapshots.</Warning>
  <Warning>Rule {Types that used to be 100% covered by tests should still be 100% covered} relies on code coverage data that is not available in the baseline code base snapshot. The rule hasen't been executed on both baseline and newer code base snapshots.</Warning>
  <Warning>Rule {Types that used to be 100% covered by tests should still be 100% covered} relies on code coverage data that is not available in the newer code base snapshot. The rule hasen't been executed on both baseline and newer code base snapshots.</Warning>
  <Warning>Rule {Types tagged with FullCoveredAttribute should be 100% covered} relies on code coverage data that is not available in the baseline code base snapshot. The rule hasen't been executed on both baseline and newer code base snapshots.</Warning>
  <Warning>Rule {Types tagged with FullCoveredAttribute should be 100% covered} relies on code coverage data that is not available in the newer code base snapshot. The rule hasen't been executed on both baseline and newer code base snapshots.</Warning>
  <Warning>Rule {Types 100% covered should be tagged with FullCoveredAttribute} relies on code coverage data that is not available in the baseline code base snapshot. The rule hasen't been executed on both baseline and newer code base snapshots.</Warning>
  <Warning>Rule {Types 100% covered should be tagged with FullCoveredAttribute} relies on code coverage data that is not available in the newer code base snapshot. The rule hasen't been executed on both baseline and newer code base snapshots.</Warning>
  <Warning>Rule {Methods should have a low C.R.A.P score} relies on code coverage data that is not available in the baseline code base snapshot. The rule hasen't been executed on both baseline and newer code base snapshots.</Warning>
  <Warning>Rule {Methods should have a low C.R.A.P score} relies on code coverage data that is not available in the newer code base snapshot. The rule hasen't been executed on both baseline and newer code base snapshots.</Warning>
  <Warning>Quality Gate {Percentage Coverage} relies on code coverage data that is not available in the baseline code base snapshot.</Warning>
  <Warning>Quality Gate {Percentage Coverage} relies on code coverage data that is not available in the newer code base snapshot.</Warning>
  <Warning>Quality Gate {Percentage Coverage on New Code} relies on code coverage data that is not available in the baseline code base snapshot.</Warning>
  <Warning>Quality Gate {Percentage Coverage on New Code} relies on code coverage data that is not available in the newer code base snapshot.</Warning>
  <Warning>Quality Gate {Percentage Coverage on Refactored Code} relies on code coverage data that is not available in the baseline code base snapshot.</Warning>
  <Warning>Quality Gate {Percentage Coverage on Refactored Code} relies on code coverage data that is not available in the newer code base snapshot.</Warning>
  <Info>Execute queries and rules</Info>
  <Info>Output report source files</Info>
  <Warning>The baseline versions of source files modified are not available in the report.
Reason: Cannot find the file {SourceFiles.zip} in the analysis result directory {D:\Unity Projects\PSG\NDependOut}.
Make sure that the NDepend Project Properties &gt; Analysis &gt; Zip Source Files setting is enabled.</Warning>
  <Info>The report lists 66 sources files (0 new and 0 changed since the baseline) on a total of 66 source files for the application analyzed.
See 'Project Properties &gt; Report' to adjust the set of source files listed in the report.</Info>
  <Error>2 quality gates fail:
  - 'Critical Rules Violated' value 7 rules greater than fail threshold 0 rules
  - 'Debt Rating per Namespace' value 1 namespaces greater than fail threshold 0 namespaces</Error>
  <Info>Building the report (standard).</Info>
  <Info>NDepend analysis done. Duration: 00:10.415</Info>
</InfoWarnings>